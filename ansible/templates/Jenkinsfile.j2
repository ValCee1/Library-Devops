
pipeline {
    agent any
    environment {
        APP_PORT = "{{ backend_port }}"
    }
    stages {
        stage('Build') {
            steps {
                script {
                    echo "Building on port: ${env.APP_PORT}"
                    // Compile the application
                    sh 'mvn clean install'
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    echo "Testing on port: ${env.APP_PORT}"
                    // Run unit tests
                    sh 'mvn test'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                // Build the Docker image
                sh "docker build -t ${DOCKER_IMAGE} ."
            }
        }

        stage('Push Docker Image') {
            steps {
                // Push the Docker image to a repository
                withCredentials([string(credentialsId: 'docker-credentials-id', variable: 'DOCKER_PASSWORD')]) {
                    sh "echo ${DOCKER_PASSWORD} | docker login -u your-docker-username --password-stdin"
                    sh "docker push ${DOCKER_IMAGE}"
                }
            }
        }

        stage('Deploy') {
            steps {
                // Deploy the application
                sh 'kubectl apply -f k8s/deployment.yaml'
            }
        }
    }

    post {
        always {
            // Clean up workspace
            cleanWs()
        }
        success {
            // Notify success
            echo 'Pipeline executed successfully!'
        }
        failure {
            // Notify failure
            echo 'Pipeline failed!'
        }
    }
}

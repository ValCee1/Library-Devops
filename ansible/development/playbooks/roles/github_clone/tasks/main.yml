- name: Ensure the destination folder exists
  ansible.builtin.file:
    path: "{{ source_folder }}"
    state: directory
    mode: "0755"
    owner: "{{ new_username }}"
    group: "{{ new_username }}"

- name: Configure Git to trust the destination folder
  ansible.builtin.command:
    cmd: "git config --global --add safe.directory {{ source_folder }}"
  become: true

- name: Clone or update the Git repository
  ansible.builtin.git:
    repo: "{{ github_repo_url }}"
    dest: "{{ source_folder }}"
    version: "main"
    force: yes
    update: yes
  register: git_clone_result

- name: Ensure the repository is cloned or updated
  ansible.builtin.assert:
    that:
      - git_clone_result.after is defined
    fail_msg: "Failed to clone or update the repository."

# - name: Check if the required folder exists
#   ansible.builtin.stat:
#     path: "{{ source_folder }}"
#   register: folder_check

# - name: Assert the required folder exists
#   ansible.builtin.assert:
#     that:
#       - folder_check.stat.isdir
#     fail_msg: "The required folder does not exist: {{ source_folder }}"

- name: Check for package.json file
  ansible.builtin.stat:
    path: "{{ source_folder }}/package.json"
  register: file_check

- name: Assert the required file exists
  ansible.builtin.assert:
    that:
      - file_check.stat.exists
    fail_msg: "The required file does not exist: package.json"

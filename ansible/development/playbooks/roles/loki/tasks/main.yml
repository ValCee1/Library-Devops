---
- name: Create Loki user
  user:
    name: loki
    system: yes
    create_home: no

- name: Create Loki directories
  file:
    path: "{{ item }}"
    state: directory
    owner: loki
    group: loki
    mode: "0755"
  loop:
    - "{{ loki_config_dir }}"
    - "{{ loki_data_dir }}"
    - "{{ loki_wal_directory }}"

- name: Set correct permissions for Loki data directory
  file:
    path: "{{ loki_data_dir }}"
    owner: loki
    group: loki
    mode: "0755"
    recurse: yes

- name: Check if Loki is already installed
  stat:
    path: /usr/local/bin/loki-linux-amd64
  register: loki_binary

- name: Download Loki binary
  get_url:
    url: "https://github.com/grafana/loki/releases/download/v{{ loki_version }}/loki-linux-amd64.zip"
    dest: "/tmp/loki-{{ loki_version }}.zip"
  when: not loki_binary.stat.exists

- name: Unzip Loki binary
  unarchive:
    src: "/tmp/loki-{{ loki_version }}.zip"
    dest: "/usr/local/bin"
    remote_src: yes
    mode: "0755"
    owner: root
    group: root
  when: not loki_binary.stat.exists

- name: Create Loki configuration file
  template:
    src: loki-config.yml.j2
    dest: "{{ loki_config_dir }}/loki-config.yml"
    owner: loki
    group: loki
    mode: "0644"
  notify: Restart Loki

- name: Create Loki systemd service file
  template:
    src: loki.service.j2
    dest: /etc/systemd/system/loki.service
    owner: root
    group: root
    mode: "0644"
  notify:
    - Reload systemd
    - Restart Loki

- name: Start and enable Loki service
  systemd:
    name: loki
    state: started
    enabled: yes

# - name: flush handlers
#   ansible.builtin.meta: flush_handlers

# - name: Verify loki Installation
#   ansible.builtin.import_tasks: verify.yaml

- name: Remove Loki zip file
  file:
    path: "/tmp/loki-{{ loki_version }}.zip"
    state: absent

---
# tasks file for playbooks/roles/loki
- name: Ensure loki user exists
  ansible.builtin.user:
    name: loki
    state: present
    shell: /usr/sbin/nologin
    system: true

- name: Ensure loki group exists
  ansible.builtin.group:
    name: loki
    state: present
    system: true

- name: Check if Loki default dir is present
  ansible.builtin.stat:
    path: "/tmp/loki/boltdb-shipper-active"
  register: __default_structure

- name: Default structure cleanup
  when: __default_structure.stat.exists | bool
  block:
    - name: Ensure that Loki is stopped before default cleanup
      ansible.builtin.systemd:
        name: loki.service
        state: stopped

    - name: Remove default configuration from "/tmp/loki" directory
      ansible.builtin.file:
        path: "/tmp/loki"
        state: absent

- name: Create directories for Loki
  ansible.builtin.file:
    path: /opt/loki
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Create required directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: loki
    group: loki
    mode: "0755"
  loop:
    - /tmp/loki/boltdb-shipper-active
    - /tmp/loki/boltdb-shipper-cache
    - /tmp/loki/chunks

- name: Download Loki binary
  ansible.builtin.get_url:
    url: "https://github.com/grafana/loki/releases/download/v{{ loki_version }}/loki-linux-amd64.zip"
    dest: /tmp/loki-linux-amd64.zip

- name: Unzip Loki binary
  ansible.builtin.unarchive:
    src: /tmp/loki-linux-amd64.zip
    dest: /opt/loki/
    remote_src: true

- name: Set executable permissions for Loki
  ansible.builtin.file:
    path: /opt/loki/loki-linux-amd64
    state: file
    owner: root
    group: root
    mode: "0755"

- name: Create Loki config file
  ansible.builtin.template:
    dest: /opt/loki/loki-config.yaml
    src: loki-config.yaml.j2
    owner: root
    group: root
    mode: "0644"
    validate: "/usr/bin/loki --verify-config -config.file %s"

- name: Create Loki systemd service
  ansible.builtin.template:
    dest: /etc/systemd/system/loki.service
    src: loki.service.j2
    owner: root
    group: root
    mode: "0644"

- name: Reload systemctl
  ansible.builtin.command: systemctl daemon-reload

- name: Get firewalld state
  ansible.builtin.systemd:
    name: "firewalld"
  register: __firewalld_service_state

- name: Enable firewalld rule to expose Loki tcp port {{ loki_http_listen_port }}
  ansible.posix.firewalld:
    immediate: true
    permanent: true
    port: "{{ loki_http_listen_port }}/tcp"
    state: enabled
  when:
    - __firewalld_service_state.status.ActiveState == "active"
    - loki_expose_port | bool

- name: Ensure that Loki firewalld rule is not present - tcp port {{ loki_http_listen_port }}
  ansible.posix.firewalld:
    immediate: true
    permanent: true
    port: "{{ loki_http_listen_port }}/tcp"
    state: disabled
  when:
    - __firewalld_service_state.status.ActiveState == "active"
    - not loki_expose_port | bool

- name: Flush handlers after deployment
  ansible.builtin.meta: flush_handlers

- name: Ensure that Loki is started
  ansible.builtin.systemd:
    name: loki.service
    state: started

- name: Run Service Check
  ansible.builtin.import_tasks: service_check.yaml

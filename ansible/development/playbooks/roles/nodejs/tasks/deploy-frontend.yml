---
- name: Ensure frontend directory exists
  ansible.builtin.stat:
    path: "{{ frontend_project_folder }}"
  register: frontend_dir_stat

- name: Abort if frontend directory does not exist
  ansible.builtin.fail:
    msg: "The frontend directory does not exist."
  when: not frontend_dir_stat.stat.exists

- name: Copy frontend environment variables
  ansible.builtin.template:
    src: frontend.env.j2
    dest: "{{ frontend_project_folder }}/.env"
  when: frontend_dir_stat.stat.exists
  changed_when: false

# - name: NPM Install for frontend
#   ansible.builtin.command:
#     cmd: npm install
#     chdir: "{{ frontend_project_folder }}"
#   args:
#     creates: "{{ frontend_project_folder }}/node_modules"

- name: Install frontend packages based on package.json.
  community.general.npm:
    path: "{{ frontend_project_folder }}"

- name: Install pm2 globally
  ansible.builtin.npm:
    name: pm2
    state: latest
    global: true
  changed_when: false

- name: Build the React app if build folder is missing
  ansible.builtin.command:
    cmd: npm run build
    chdir: "{{ frontend_project_folder }}"
  args:
    creates: "{{ frontend_project_folder }}/build/index.html"

- name: Ensure Nginx service is running and enabled
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true

- name: Free up port 80 by killing processes using it
  ansible.builtin.shell: "sudo lsof -t -i tcp:80 -s tcp:listen | sudo xargs kill"
  ignore_errors: true
  changed_when: false

- name: Start React app with PM2 serve
  ansible.builtin.command:
    cmd: "sudo pm2 serve {{ root }} --port 80 --name {{ pm2_name }} --spa "
  args:
    creates: "{{ pm2_runtime_path }}/{{ pm2_name }}.json"
  register: pm2_serve
  changed_when: pm2_serve.rc != 0

- name: Set PM2 to start on boot if not already set
  ansible.builtin.command:
    cmd: pm2 startup systemd -u $USER --hp $HOME
  register: pm2_startup
  changed_when: pm2_startup.rc == 0 # Changed only if the command succeeds (rc == 0)

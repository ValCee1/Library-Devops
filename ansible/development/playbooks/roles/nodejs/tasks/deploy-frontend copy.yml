---
- name: Check if the folder exists on the Frontend
  ansible.builtin.stat:
    path: "{{ frontend_project_folder }}"
  register: frontend_dir_stat

- name: Debug frontend directory non-existence
  ansible.builtin.fail:
    msg: "The frontend directory does not exist."
  when: not frontend_dir_stat.stat.exists

- name: Copy Frontend environmental variables
  ansible.builtin.template:
    src: frontend.env.j2
    dest: "{{ frontend_project_folder }}/.env"
  changed_when: false

- name: NPM Install for frontend
  ansible.builtin.command:
    cmd: npm install
    chdir: "{{ frontend_project_folder }}"
  args:
    creates: "{{ frontend_project_folder }}/node_modules"

- name: Install pm2 globally
  ansible.builtin.npm:
    name: pm2
    state: present
    global: true
  changed_when: false

- name: Build the React app
  ansible.builtin.command:
    cmd: npm run build
    chdir: "{{ frontend_project_folder }}"
  args:
    creates: "{{ frontend_project_folder }}/build/index.html"

- name: Ensure Nginx service is started and enabled
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true

- name: Free up port 80 by killing processes using it
  ansible.builtin.shell: "sudo lsof -t -i tcp:80 -s tcp:listen | sudo xargs kill"
  ignore_errors: true
  changed_when: false

- name: Start React app with pm2 serve
  ansible.builtin.command:
    cmd: "pm2 serve {{ frontend_project_folder }}/build --spa --port 80 --name {{ domain }}"
  args:
    creates: "/home/deploy/.pm2/runtimes/glorious.json"
  notify:
    - Save PM2 process list
    - Reload Nginx

- name: Set PM2 to start on boot
  ansible.builtin.command:
    cmd: sudo pm2 startup systemd -u $USER --hp $HOME
  changed_when: false

- name: Reload systemd daemon to recognize the new PM2 service
  ansible.builtin.systemd:
    daemon_reload: true
  changed_when: false

- name: Create Loki group
  ansible.builtin.group:
    name: "{{ loki_group }}"
    state: present

- name: Create Loki user
  ansible.builtin.user:
    name: "{{ loki_user }}"
    group: "{{ loki_group }}"
    system: true
    create_home: false

- name: Download Loki binary
  ansible.builtin.get_url:
    url: "{{ loki_binary_url }}"
    dest: /tmp/loki-linux-amd64.zip

- name: Install unzip if not present
  ansible.builtin.package:
    name: unzip
    state: present

- name: Create data directories for Loki
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ loki_user }}"
    group: "{{ loki_group }}"
    mode: "0750"
  loop:
    - "{{ loki_data_dir }}"
    - "{{ loki_wal_dir }}"
    - "/tmp/loki/"

- name: Unzip Loki binary
  ansible.builtin.unarchive:
    src: /tmp/loki-linux-amd64.zip
    dest: /tmp
    remote_src: yes

- name: Move Loki binary to install directory
  ansible.builtin.copy:
    src: /tmp/loki-linux-amd64
    dest: "{{ loki_install_dir }}/loki"
    remote_src: yes
    mode: "0755"

- name: Create configuration directory
  ansible.builtin.file:
    path: "{{ loki_config_dir }}"
    state: directory
    owner: "{{ loki_user }}"
    group: "{{ loki_group }}"
    mode: "0750"

- name: Copy Loki configuration file
  ansible.builtin.template:
    src: loki-config.yaml.j2
    dest: "{{ loki_config_file }}"
    owner: "{{ loki_user }}"
    group: "{{ loki_group }}"
    mode: "0640"

- name: Check Loki config file
  ansible.builtin.stat:
    path: "{{ loki_config_file }}"
  register: loki_config_stat
  failed_when: not loki_config_stat.stat.exists

- name: Fail if Loki config file doesn't exist
  ansible.builtin.fail:
    msg: "{{ loki_config_file }} not found or inaccessible"
  when: loki_config_stat.stat.exists == false

- name: Check Loki temporary directory
  ansible.builtin.stat:
    path: "/tmp/loki/"
  register: loki_tmp_dir_stat
  failed_when: not loki_tmp_dir_stat.stat.exists

- name: Fail if Loki temporary directory doesn't exist
  ansible.builtin.fail:
    msg: "/tmp/loki/ directory not found or inaccessible"
  when: loki_tmp_dir_stat.stat.exists == false

- name: Create systemd service file
  ansible.builtin.template:
    src: loki.service.j2
    dest: "{{ systemd_service_file }}"
    owner: "root"
    group: "root"
    mode: "0644"

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable and start Loki service
  ansible.builtin.systemd:
    name: loki
    enabled: true
    state: started

- name: Run Service Check
  ansible.builtin.import_tasks: service_check.yaml

- name: Clean up downloaded files
  ansible.builtin.file:
    path: "/tmp/loki-linux-amd64.zip"
    state: absent

- name: Remove unzipped Loki binary from tmp
  ansible.builtin.file:
    path: "/tmp/loki-linux-amd64"
    state: absent
